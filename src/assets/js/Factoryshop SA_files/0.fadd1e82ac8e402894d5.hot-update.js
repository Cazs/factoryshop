webpackHotUpdate(0,{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Admin/Factories.vue":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"./node_modules/babel-runtime/core-js/json/stringify.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Masthead_vue__ = __webpack_require__(\"./src/components/Masthead.vue\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__assets_js_HttpClient_js__ = __webpack_require__(\"./src/assets/js/HttpClient.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__assets_js_SessionManager_js__ = __webpack_require__(\"./src/assets/js/SessionManager.js\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nalert();\n\nthis.selected_factory = {};\n\nvar factories = [{ name: 'Factory01', industry: 'jewelery', location: 'Johannesburg', email: 'default@email.com',\n    reg_num: 'N/A', tax_num: 'N/A', range: 140.5, date_est: 0, date_joined: 0, isActive: true, visits: 40, sales: 30 }, { name: 'Factory02', industry: 'electronics', location: 'Cape Town', email: 'default@email.com',\n    reg_num: 'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340 }, { name: 'Factory03', industry: 'hardware', location: 'Durban', email: 'default@email.com',\n    reg_num: 'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340, _rowVariant: 'success' }, { name: 'Factory04', industry: 'pottery', location: 'Pretoria', email: 'default@email.com',\n    reg_num: 'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340, _cellVariants: { range: 'danger', sales: 'warning' } }];\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    components: { Masthead: __WEBPACK_IMPORTED_MODULE_1__Masthead_vue__[\"a\" /* default */] },\n    data: function data() {\n        return {\n            factory: { name: 'Factory05', industry: 'electronics', location: 'Johannesburg', email: 'default@email.com',\n                reg_num: 'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340 },\n            factories: factories,\n            fields: [{ key: 'name', label: 'Factory name', sortable: true }, { key: 'industry', label: 'Industry', sortable: true }, { key: 'location', label: 'Location', sortable: true }, { key: 'email', label: 'eMail', sortable: true }, { key: 'reg_num', label: 'Registration No.', sortable: true }, { key: 'tax_num', label: 'Tax No.', sortable: true }, { key: 'range', label: 'Delivery Range', sortable: true }, { key: 'date_est', label: 'Date Established', sortable: true }, { key: 'date_joined', label: 'Date Joined', sortable: true }, { key: 'visits', label: 'Visits', sortable: true, 'class': 'text-center' }, { key: 'sales', label: 'Sale Count', sortable: true, 'class': 'text-center' }, { key: 'isActive', label: 'is Active' }, { key: 'actions', label: 'Actions' }],\n            currentPage: 1,\n            perPage: 5,\n            totalRows: factories.length,\n            pageOptions: [5, 10, 15],\n            sortBy: null,\n            sortDesc: false,\n            filter: null,\n            modalInfo: { title: '', content: '' }\n        };\n    },\n\n    computed: {\n        sortOptions: function sortOptions() {\n            // Create an options list from our fields\n            return this.fields.filter(function (f) {\n                return f.sortable;\n            }).map(function (f) {\n                return { text: f.label, value: f.key };\n            });\n        }\n    },\n    methods: {\n        info: function info(item, index, button) {\n            this.modalInfo.title = 'Row index: ' + index;\n            this.modalInfo.content = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(item, null, 2);\n            this.$root.$emit('bv::show::modal', 'modalInfo', button);\n        },\n        selectFactory: function selectFactory(item, index, button) {\n            var toggles = document.querySelectorAll('.factory-detail-toggle');\n            toggles.forEach(function (element) {\n                var btn_text = element.innerText;\n                //console.log(btn_text.toLowerCase);\n                //make sure there's only ever one row expanded\n                if (element != button) //ignore current button\n                    if (btn_text.toLowerCase() == 'hide details') element.click(); //click hide button if showing\n\n                //this.$root.$emit('click')\n            });\n            this.selected_factory = item;\n            //alert(JSON.stringify(this.selected_factory));\n        },\n        resetModal: function resetModal() {\n            this.modalInfo.title = '';\n            this.modalInfo.content = '';\n        },\n        onFiltered: function onFiltered(filteredItems) {\n            // Trigger pagination to update the number of buttons/pages due to filtering\n            this.totalRows = filteredItems.length;\n            this.currentPage = 1;\n        },\n        addFactory: function addFactory() {\n            var _this = this;\n\n            this.$validator.validateAll().then(function (result) {\n                if (result) {\n                    alert('creating factory');\n                    //make an asynchronous call to create the product\n                    var str_date_est = _this.factory.date_established;\n                    var date_est = new Date(str_date_est);\n                    _this.factory.date_established = date_est.getTime();\n\n                    //update session_id\n                    __WEBPACK_IMPORTED_MODULE_2__assets_js_HttpClient_js__[\"a\" /* HttpClient */].defaults.headers['session_id'] = _this.session_id;\n\n                    //PUT http://localhost:8080/factory\n                    __WEBPACK_IMPORTED_MODULE_2__assets_js_HttpClient_js__[\"a\" /* HttpClient */].put('factory', _this.factory).then(function (response) {\n                        alert(response.data);\n                        _this.factory.date_established = str_date_est; //so that HTML5 can parse the date for the date picker\n                    }).catch(function (err) {\n                        //this.errors.push(err);\n                        alert(err);\n                        _this.factory.date_established = str_date_est; //so that HTML5 can parse the date for the date picker\n                    });\n                    return;\n                }\n                alert('Please correct the displayed errors.');\n            });\n        },\n        removeFactory: function removeFactory(id) {\n            this.factories.splice(id, 1);\n        },\n        newProduct: function newProduct(src) {\n            //set selected factory using global object\n            document.selected_factory = JSON.parse(src.id);\n            var cookie = document.cookie;\n            //let selected_prod = cookie.split(\";\");\n\n            //set defaults\n            if (cookie) {\n                var selected_prod = getValueByKey(document.cookie, \"fs_selected_product\", \";\", \"::=\");\n\n                alert(selected_prod);\n\n                if (selected_prod) {\n                    var brand_name = getValueByKey(selected_prod, \"brand_name\", \"&\", \"=\");\n\n                    alert(brand_name);\n                }\n            }\n        },\n        commitFactoryProduct: function commitFactoryProduct() {\n            var brand_name = document.getElementById(\"new_prod_brand\").value; //$(\"#new_prod_brand\").value;\n            var product_description = document.getElementById(\"new_prod_desc\").value;\n            var product_cost = document.getElementById(\"new_prod_cost\").value;\n            var product_unit = document.getElementById(\"new_prod_unit\").value;\n            var product_serial_code = document.getElementById(\"new_prod_serial\").value;\n            var product_model = document.getElementById(\"new_prod_model\").value;\n            var product_category = document.getElementById(\"new_prod_cat\").value;\n\n            //create urlencoded string representation of the product to be created\n            var obj = encodeURIComponent(\"brand_name\") + \"=\" + encodeURIComponent(brand_name) + \"&\" + encodeURIComponent(\"product_description\") + \"=\" + encodeURIComponent(product_description) + \"&\" + encodeURIComponent(\"product_cost\") + \"=\" + encodeURIComponent(product_cost) + \"&\" + encodeURIComponent(\"product_unit\") + \"=\" + encodeURIComponent(product_unit) + \"&\" + encodeURIComponent(\"product_serial_code\") + \"=\" + encodeURIComponent(product_serial_code) + \"&\" + encodeURIComponent(\"product_model\") + \"=\" + encodeURIComponent(product_model) + \"&\" + encodeURIComponent(\"product_category\") + \"=\" + encodeURIComponent(product_category);\n\n            document.cookie = \"fs_selected_product::=\" + obj.toString(); //.replaceAll(\"&\",\";\");\n        }\n    },\n    mounted: function mounted() {\n        var masthead = document.querySelector('.masthead');\n        //masthead.style.position = 'absolute';\n        masthead.style.marginTop = \"-600px\";\n\n        //check if session_id is set\n        if (this.session_id) {\n            //check if session_id hasn't expired\n            //load factory data from server\n        }\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Admin/Factories.vue\n");

/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10ffc370\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Admin/Factories.vue":
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(\"./node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\nbody{\\n    background-color:#7e7e7e;\\n}\\n.modal-backdrop{\\n    display: none;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/ghost/Workspace/Factoryshop/frontend/factoryshop/src/components/Admin/src/components/Admin/Factories.vue\"],\"names\":[],\"mappings\":\";AAyMA;IACA,yBAAA;CACA;AACA;IACA,cAAA;CACA\",\"file\":\"Factories.vue\",\"sourcesContent\":[\"<template>\\n    <div style='margin-top: 200px;background-color:#fff;box-shadow: 10px 0px -20px #343434;'>\\n        <b-modal ok-disabled id=\\\"newFactoryModal\\\" size='lg' title=\\\"New Factory\\\" style='z-index:100'>\\n            <div class=\\\"my-4\\\">\\n                <form role=\\\"form\\\" method=\\\"post\\\" @submit.prevent=\\\"addFactory\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Factory name*</label>\\n                        <input type=\\\"text\\\" v-validate=\\\"'required'\\\" v-model=\\\"factory.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter factory's Name\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('name')\\\">{{ errors.first('name') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Location*</label>\\n                        <input type=\\\"text\\\" v-validate=\\\"'required'\\\" v-model=\\\"factory.location\\\" name=\\\"location\\\" class=\\\"form-control\\\" placeholder=\\\"Enter factory's address\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('location')\\\">{{ errors.first('location') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Industry*</label>\\n                        <input type=\\\"text\\\" v-validate=\\\"'required'\\\" v-model=\\\"factory.industry\\\" name=\\\"industry\\\" class=\\\"form-control\\\" placeholder=\\\"Enter industry/specialty\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('industry')\\\">{{ errors.first('industry') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"label\\\" for=\\\"email\\\">Contact eMail</label>\\n                        <input type=\\\"email\\\" v-validate=\\\"'required|email'\\\" :class=\\\"{'input': true, 'danger': errors.has('email') }\\\" v-model=\\\"factory.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter contact email for factory representative.\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('email')\\\" class=\\\"help danger\\\">{{ errors.first('email') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"label\\\" for=\\\"date_established\\\">Date Established*</label>\\n                        <input type=\\\"hidden\\\" name=\\\"date_limit\\\" value=\\\"2018-03-20\\\">\\n                        <input type=\\\"date\\\" v-validate=\\\"'before:date_limit|date_format:YYYY-MM-DD'\\\" data-vv-as=\\\"Date Est.\\\" v-model=\\\"factory.date_established\\\" name=\\\"date_established\\\" class=\\\"form-control\\\" placeholder=\\\"Birth day\\\">\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('date_established')\\\">{{ errors.first('date_established') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Registration Number*</label>\\n                        <input type=\\\"text\\\" v-model=\\\"factory.reg_number\\\" name=\\\"reg_number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter factory's registration Number\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Tax Number*</label>\\n                        <input type=\\\"text\\\" v-model=\\\"factory.tax_number\\\" name=\\\"tax_number\\\" class=\\\"form-control\\\" placeholder=\\\"Enter factory's tax Number\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Delivery Range</label>\\n                        <input type=\\\"number\\\" v-validate=\\\"'required'\\\" v-model=\\\"factory.delivery_range\\\" name=\\\"delivery_range\\\" class=\\\"form-control\\\" placeholder=\\\"Enter delivery range in KM\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('delivery_range')\\\">{{ errors.first('delivery_range') }}</span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Order cost eligible for delivery (in ZAR)</label>\\n                        <input type=\\\"text\\\" v-validate=\\\"'required'\\\" v-model=\\\"factory.min_delivery_cost\\\" name=\\\"min_delivery_cost\\\" class=\\\"form-control\\\" placeholder=\\\"What's the minimum order cost that the factory is willing to do a delivery?\\\"/>\\n                        <span style=\\\"color:red;\\\" v-show=\\\"errors.has('min_delivery_cost')\\\">{{ errors.first('min_delivery_cost') }}</span>\\n                    </div>\\n                    <input type=\\\"submit\\\" value=\\\"Create\\\"/>\\n                </form>\\n            </div>\\n            <template slot=\\\"modal-footer\\\">\\n                <!-- <b-btn v-if=\\\"selected !== 'cancel'\\\" variant=\\\"primary\\\" @click=\\\"clickModalBtn('OK')\\\">\\n                    OK\\n                </b-btn>\\n                <b-btn v-if=\\\"selected !== 'ok'\\\" variant=\\\"danger\\\" @click=\\\"clickModalBtn('CANCEL')\\\">\\n                    Cancel\\n                </b-btn> -->\\n            </template>\\n        </b-modal>\\n        <!-- Create New Factory Product Modal-->\\n        <b-modal id=\\\"newProductModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" size='lg' title=\\\"New Factory Product\\\" style='z-index:100'>\\n            <div>\\n                <form role=\\\"form\\\" method=\\\"post\\\" action=\\\"/factory/product\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Brand Name*</label>\\n                        <input id=\\\"new_prod_brand\\\" placeholder=\\\"Enter Product Name\\\" name=\\\"brand_name\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Product Model [optional]</label>\\n                        <input id=\\\"new_prod_model\\\" placeholder=\\\"Enter Product Model\\\" name=\\\"product_model\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Product Description*</label>\\n                        <input id=\\\"new_prod_desc\\\" placeholder=\\\"Enter Product Description\\\" name=\\\"product_description\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Product Cost*</label>\\n                        <input id=\\\"new_prod_cost\\\" placeholder=\\\"Enter Product Cost (excluding VAT)\\\" name=\\\"product_cost\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <!--.form-group\\n                    label Product Quantity*\\n                    input.form-control(placeholder='Enter Product Quantity' name='quantity')\\n                    -->\\n                    <div class=\\\"form-group\\\">\\n                        <label>Product Unit*</label>\\n                        <input id=\\\"new_prod_unit\\\" placeholder=\\\"Enter product's unit of measurement\\\" name=\\\"product_unit\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Serial Number [optional]</label>\\n                        <input id=\\\"new_prod_serial\\\" placeholder=\\\"Enter product's serial Number\\\" name=\\\"product_serial_code\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Product Category</label>\\n                        <input id=\\\"new_prod_cat\\\" placeholder=\\\"Enter product's category - delimit with commas if multiple categories.\\\" name=\\\"product_category\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label>Other [optional]</label>\\n                        <input id=\\\"new_prod_other\\\" placeholder=\\\"Any other text, e.g. expiry date\\\" name=\\\"other\\\" class=\\\"form-control\\\"/>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                        <button type=\\\"submit\\\" style=\\\"width:150px;height:60px;\\\" onclick=\\\"return commitFactoryProduct();\\\" class=\\\"btn btn-success\\\">Create Product</button>\\n                        <button type=\\\"reset\\\" style=\\\"margin-left: 10px;width:120px;height:60px;\\\" class=\\\"btn btn-warning\\\">Reset Form</button>\\n                        <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" style=\\\"margin-left: 10px;width:120px;height:60px;\\\" class=\\\"btn btn-danger\\\">Dismiss</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </b-modal>\\n            \\n        <div style='width:250px;height:80px;z-index:10;border-radius:5px;background-color:transparent;position:fixed;top:100px;'>\\n            <b-btn v-b-modal.newFactoryModal class=\\\"btn-new-factory btn btn-success btn-lg\\\">\\n                <i class=\\\"fa fa-plus\\\"></i>New Factory\\n            </b-btn>\\n        </div>\\n\\n        <Masthead></Masthead>\\n\\n        <b-container fluid>\\n            <!-- User Interface controls -->\\n            <b-row>\\n                <b-col md=\\\"6\\\" class=\\\"my-1\\\">\\n                    <b-form-group horizontal label=\\\"Filter\\\" class=\\\"mb-0\\\">\\n                        <b-input-group>\\n                            <b-form-input v-model=\\\"filter\\\" placeholder=\\\"Type to Search\\\" />\\n                            <b-input-group-append>\\n                            <b-btn style=\\\"z-index:0\\\" :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\">Clear</b-btn>\\n                            </b-input-group-append>\\n                        </b-input-group>\\n                    </b-form-group>\\n                </b-col>\\n                <b-col md=\\\"6\\\" class=\\\"my-1\\\">\\n                    <b-form-group horizontal label=\\\"Sort\\\" class=\\\"mb-0\\\">\\n                        <b-input-group>\\n                            <b-form-select v-model=\\\"sortBy\\\" :options=\\\"sortOptions\\\">\\n                            <option slot=\\\"first\\\" :value=\\\"null\\\">-- none --</option>\\n                            </b-form-select>\\n                            <b-form-select :disabled=\\\"!sortBy\\\" v-model=\\\"sortDesc\\\" slot=\\\"append\\\">\\n                            <option :value=\\\"false\\\">Asc</option>\\n                            <option :value=\\\"true\\\">Desc</option>\\n                            </b-form-select>\\n                        </b-input-group>\\n                    </b-form-group>\\n                </b-col>\\n                <b-col md=\\\"6\\\" class=\\\"my-1\\\">\\n                    <b-pagination :total-rows=\\\"totalRows\\\" :per-page=\\\"perPage\\\" v-model=\\\"currentPage\\\" class=\\\"my-0\\\" />\\n                </b-col>\\n                <b-col md=\\\"6\\\" class=\\\"my-1\\\">\\n                    <b-form-group horizontal label=\\\"Per page\\\" class=\\\"mb-0\\\">\\n                    <b-form-select :options=\\\"pageOptions\\\" v-model=\\\"perPage\\\" />\\n                    </b-form-group>\\n                </b-col>\\n            </b-row>\\n\\n            <!-- Main table element -->\\n            <b-table show-empty\\n                    stacked=\\\"md\\\"\\n                    :items=\\\"factories\\\"\\n                    :fields=\\\"fields\\\"\\n                    :current-page=\\\"currentPage\\\"\\n                    :per-page=\\\"perPage\\\"\\n                    :filter=\\\"filter\\\"\\n                    :sort-by.sync=\\\"sortBy\\\"\\n                    :sort-desc.sync=\\\"sortDesc\\\"\\n                    @filtered=\\\"onFiltered\\\">\\n                <template slot=\\\"name\\\" slot-scope=\\\"row\\\">{{row.value}}</template>\\n                <template slot=\\\"isActive\\\" slot-scope=\\\"row\\\">{{row.value?'Yes :)':'No :('}}</template>\\n                <template slot=\\\"actions\\\" slot-scope=\\\"row\\\">\\n                    <!-- We use @click.stop here to prevent a 'row-clicked' event from also happening -->\\n                    <b-button size=\\\"sm\\\" @click.stop=\\\"info(row.item, row.index, $event.target)\\\" class=\\\"mr-1\\\">\\n                    Info modal\\n                    </b-button>\\n                    <b-button class=\\\"factory-detail-toggle\\\" size=\\\"sm\\\" @click.stop=\\\"row.toggleDetails\\\" @click=\\\"selectFactory(row.item, row.index, $event.target)\\\">\\n                    {{ row.detailsShowing ? 'Hide' : 'Show' }} Details\\n                    </b-button>\\n                </template>\\n                <template slot=\\\"row-details\\\" slot-scope=\\\"row\\\">\\n                    <b-card>\\n                        <b-col md=\\\"6\\\" class=\\\"my-1\\\">\\n                            <b-form-group horizontal label=\\\"Factory\\\" class=\\\"mb-0\\\">\\n                                <b-input-group>\\n                                    <b-form-input v-model=\\\"selected_factory.name\\\" type=\\\"text\\\" placeholder=\\\"\\\"/>\\n                                    <b-input-group-append>\\n                                    <b-btn :disabled=\\\"!filter\\\" @click=\\\"filter = ''\\\" style=\\\"z-index:0\\\">Clear</b-btn>\\n                                    </b-input-group-append>\\n                                </b-input-group>\\n                            </b-form-group>\\n                        </b-col>\\n                    </b-card>\\n                </template>\\n            </b-table>\\n\\n            <!-- Info modal -->\\n            <b-modal id=\\\"modalInfo\\\" @hide=\\\"resetModal\\\" :title=\\\"modalInfo.title\\\" ok-only>\\n                <pre>{{ modalInfo.content }}</pre>\\n            </b-modal>\\n        </b-container>\\n    </div>\\n</template>\\n\\n<style>\\nbody{\\n    background-color:#7e7e7e;\\n}\\n.modal-backdrop{\\n    display: none;\\n}\\n</style>\\n\\n<script>\\nimport Masthead from '../Masthead.vue'\\nimport {HttpClient} from '../../assets/js/HttpClient.js'\\nimport {SessionManager} from '../../assets/js/SessionManager.js'\\n\\nalert();\\n\\nthis.selected_factory =  {};\\n\\nconst factories = [\\n  { name: 'Factory01', industry: 'jewelery', location: 'Johannesburg', email: 'default@email.com',\\n    reg_num:'N/A', tax_num: 'N/A', range: 140.5, date_est: 0, date_joined: 0, isActive: true, visits: 40, sales: 30},\\n    { name: 'Factory02', industry: 'electronics', location: 'Cape Town', email: 'default@email.com',\\n    reg_num:'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340},\\n    { name: 'Factory03', industry: 'hardware', location: 'Durban', email: 'default@email.com',\\n    reg_num:'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340, _rowVariant: 'success'},\\n    { name: 'Factory04', industry: 'pottery', location: 'Pretoria', email: 'default@email.com',\\n    reg_num:'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340,_cellVariants: { range: 'danger', sales: 'warning' }},\\n]\\n\\nexport default {\\n    components: {Masthead},\\n    data(){\\n        return {\\n            factory: { name: 'Factory05', industry: 'electronics', location: 'Johannesburg', email: 'default@email.com',\\n                        reg_num:'N/A', tax_num: 'N/A', range: 100.0, date_est: 0, date_joined: 0, isActive: true, visits: 400, sales: 340},\\n            factories: factories,\\n            fields: [\\n                { key: 'name', label: 'Factory name', sortable: true },\\n                { key: 'industry', label: 'Industry', sortable: true },\\n                { key: 'location', label: 'Location', sortable: true },\\n                { key: 'email', label: 'eMail', sortable: true },\\n                { key: 'reg_num', label: 'Registration No.', sortable: true },\\n                { key: 'tax_num', label: 'Tax No.', sortable: true },\\n                { key: 'range', label: 'Delivery Range', sortable: true },\\n                { key: 'date_est', label: 'Date Established', sortable: true },\\n                { key: 'date_joined', label: 'Date Joined', sortable: true },\\n                { key: 'visits', label: 'Visits', sortable: true, 'class': 'text-center' },\\n                { key: 'sales', label: 'Sale Count', sortable: true, 'class': 'text-center' },\\n                { key: 'isActive', label: 'is Active' },\\n                { key: 'actions', label: 'Actions' }\\n            ],\\n            currentPage: 1,\\n            perPage: 5,\\n            totalRows: factories.length,\\n            pageOptions: [ 5, 10, 15 ],\\n            sortBy: null,\\n            sortDesc: false,\\n            filter: null,\\n            modalInfo: { title: '', content: '' }\\n        }\\n    },\\n    computed: {\\n        sortOptions () {\\n        // Create an options list from our fields\\n        return this.fields\\n            .filter(f => f.sortable)\\n            .map(f => { return { text: f.label, value: f.key } })\\n        }\\n    },\\n    methods: {\\n        info (item, index, button) {\\n            this.modalInfo.title = `Row index: ${index}`\\n            this.modalInfo.content = JSON.stringify(item, null, 2)\\n            this.$root.$emit('bv::show::modal', 'modalInfo', button)\\n        },\\n        selectFactory(item, index, button){\\n            var toggles = document.querySelectorAll('.factory-detail-toggle');\\n            toggles.forEach(element => {\\n                var btn_text = element.innerText;\\n                //console.log(btn_text.toLowerCase);\\n               //make sure there's only ever one row expanded\\n                if(element!=button)//ignore current button\\n                    if(btn_text.toLowerCase() == 'hide details')\\n                        element.click();//click hide button if showing\\n            \\n               //this.$root.$emit('click')\\n            });\\n            this.selected_factory =  item;\\n            //alert(JSON.stringify(this.selected_factory));\\n        },\\n        resetModal () {\\n            this.modalInfo.title = ''\\n            this.modalInfo.content = ''\\n        },\\n        onFiltered (filteredItems) {\\n            // Trigger pagination to update the number of buttons/pages due to filtering\\n            this.totalRows = filteredItems.length\\n            this.currentPage = 1\\n        },\\n        addFactory()\\n        {\\n            this.$validator.validateAll().then((result) =>\\n            {\\n                if (result)\\n                {\\n                    alert('creating factory');\\n                    //make an asynchronous call to create the product\\n                    var str_date_est = this.factory.date_established;\\n                    var date_est = new Date(str_date_est);\\n                    this.factory.date_established = date_est.getTime();\\n                    \\n                    //update session_id\\n                    HttpClient.defaults.headers['session_id'] = this.session_id;\\n\\n                    //PUT http://localhost:8080/factory\\n                    HttpClient.put('factory', this.factory).then(response =>\\n                    {\\n                        alert(response.data);\\n                        this.factory.date_established = str_date_est;//so that HTML5 can parse the date for the date picker\\n                    }).catch(err =>\\n                    {\\n                        //this.errors.push(err);\\n                        alert(err);\\n                        this.factory.date_established = str_date_est;//so that HTML5 can parse the date for the date picker\\n                    });\\n                    return;\\n                }\\n                alert('Please correct the displayed errors.');\\n            });\\n        },\\n        removeFactory(id) {\\n            this.factories.splice(id,1);\\n        },\\n        newProduct(src)\\n        {\\n          //set selected factory using global object\\n          document.selected_factory = JSON.parse(src.id);\\n          let cookie = document.cookie;\\n          //let selected_prod = cookie.split(\\\";\\\");\\n\\n          //set defaults\\n          if(cookie)\\n          {\\n            let selected_prod = getValueByKey(document.cookie, \\\"fs_selected_product\\\", \\\";\\\", \\\"::=\\\");\\n            \\n            alert(selected_prod);\\n\\n            if(selected_prod)\\n            {\\n              let brand_name = getValueByKey(selected_prod, \\\"brand_name\\\", \\\"&\\\", \\\"=\\\");\\n\\n              alert(brand_name);\\n            }\\n          }\\n        },\\n        commitFactoryProduct()\\n        {\\n          let brand_name = document.getElementById(\\\"new_prod_brand\\\").value;//$(\\\"#new_prod_brand\\\").value;\\n          let product_description = document.getElementById(\\\"new_prod_desc\\\").value;\\n          let product_cost = document.getElementById(\\\"new_prod_cost\\\").value;\\n          let product_unit = document.getElementById(\\\"new_prod_unit\\\").value;\\n          let product_serial_code = document.getElementById(\\\"new_prod_serial\\\").value;\\n          let product_model = document.getElementById(\\\"new_prod_model\\\").value;\\n          let product_category = document.getElementById(\\\"new_prod_cat\\\").value;\\n\\n          //create urlencoded string representation of the product to be created\\n          let obj = encodeURIComponent(\\\"brand_name\\\") + \\\"=\\\" + encodeURIComponent(brand_name) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_description\\\") + \\\"=\\\" + encodeURIComponent(product_description) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_cost\\\") + \\\"=\\\" + encodeURIComponent(product_cost) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_unit\\\") + \\\"=\\\" + encodeURIComponent(product_unit) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_serial_code\\\") + \\\"=\\\" + encodeURIComponent(product_serial_code) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_model\\\") + \\\"=\\\" + encodeURIComponent(product_model) + \\\"&\\\"\\n                  + encodeURIComponent(\\\"product_category\\\") + \\\"=\\\" + encodeURIComponent(product_category);\\n\\n          document.cookie = \\\"fs_selected_product::=\\\" + obj.toString();//.replaceAll(\\\"&\\\",\\\";\\\");\\n        }\\n    },\\n    mounted:function()\\n            {\\n                var masthead = document.querySelector('.masthead');\\n                //masthead.style.position = 'absolute';\\n                masthead.style.marginTop = \\\"-600px\\\";\\n\\n                //check if session_id is set\\n                if(this.session_id)\\n                {\\n                    //check if session_id hasn't expired\\n                    //load factory data from server\\n                }\\n            }\\n}\\n</script>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10ffc370\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Admin/Factories.vue\n");

/***/ })

})